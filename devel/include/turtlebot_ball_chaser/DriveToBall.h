// Generated by gencpp from file turtlebot_ball_chaser/DriveToBall.msg
// DO NOT EDIT!


#ifndef TURTLEBOT_BALL_CHASER_MESSAGE_DRIVETOBALL_H
#define TURTLEBOT_BALL_CHASER_MESSAGE_DRIVETOBALL_H

#include <ros/service_traits.h>


#include <turtlebot_ball_chaser/DriveToBallRequest.h>
#include <turtlebot_ball_chaser/DriveToBallResponse.h>


namespace turtlebot_ball_chaser
{

struct DriveToBall
{

typedef DriveToBallRequest Request;
typedef DriveToBallResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DriveToBall
} // namespace turtlebot_ball_chaser


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtlebot_ball_chaser::DriveToBall > {
  static const char* value()
  {
    return "c8652349d2a34a90a09475339e2a93d9";
  }

  static const char* value(const ::turtlebot_ball_chaser::DriveToBall&) { return value(); }
};

template<>
struct DataType< ::turtlebot_ball_chaser::DriveToBall > {
  static const char* value()
  {
    return "turtlebot_ball_chaser/DriveToBall";
  }

  static const char* value(const ::turtlebot_ball_chaser::DriveToBall&) { return value(); }
};


// service_traits::MD5Sum< ::turtlebot_ball_chaser::DriveToBallRequest> should match 
// service_traits::MD5Sum< ::turtlebot_ball_chaser::DriveToBall > 
template<>
struct MD5Sum< ::turtlebot_ball_chaser::DriveToBallRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot_ball_chaser::DriveToBall >::value();
  }
  static const char* value(const ::turtlebot_ball_chaser::DriveToBallRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot_ball_chaser::DriveToBallRequest> should match 
// service_traits::DataType< ::turtlebot_ball_chaser::DriveToBall > 
template<>
struct DataType< ::turtlebot_ball_chaser::DriveToBallRequest>
{
  static const char* value()
  {
    return DataType< ::turtlebot_ball_chaser::DriveToBall >::value();
  }
  static const char* value(const ::turtlebot_ball_chaser::DriveToBallRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtlebot_ball_chaser::DriveToBallResponse> should match 
// service_traits::MD5Sum< ::turtlebot_ball_chaser::DriveToBall > 
template<>
struct MD5Sum< ::turtlebot_ball_chaser::DriveToBallResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot_ball_chaser::DriveToBall >::value();
  }
  static const char* value(const ::turtlebot_ball_chaser::DriveToBallResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot_ball_chaser::DriveToBallResponse> should match 
// service_traits::DataType< ::turtlebot_ball_chaser::DriveToBall > 
template<>
struct DataType< ::turtlebot_ball_chaser::DriveToBallResponse>
{
  static const char* value()
  {
    return DataType< ::turtlebot_ball_chaser::DriveToBall >::value();
  }
  static const char* value(const ::turtlebot_ball_chaser::DriveToBallResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLEBOT_BALL_CHASER_MESSAGE_DRIVETOBALL_H
